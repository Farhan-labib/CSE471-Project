// import React, { useEffect, useState } from "react";
// import { useProfileContext } from "../hooks/useProfileContext";
import { useAuthContext } from "../hooks/useAuthContext";

const CreditDetails = ({creditor, debts}) => {


    const { user } = useAuthContext();
    

    const handleSettle = (id) => {
        return async () => {
        //   console.log("id: ", id);
        const response = await fetch(
            `/api/debtorCreditor/underSettlement/${id}`,
            {
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${user.token}`,
            },
            body: JSON.stringify({ UnderSettlement: true }),
            }
        );
        };
    };
    
    if (creditor) { return (
        <>
            <td className='align-middle py-4'>{}</td>
            <td className='text-left align-middle py-4'>{debts.find(
                            (debt) => debt.creditor.userId === creditor.userId
                        )?.title || "N/A"}</td>
            <td className='text-left align-middle py-4'>{debts.find(
                            (debt) => debt.creditor.userId === creditor.userId
                        )?.tag || "N/A"}</td>
            <td className='text-left align-middle py-4'>{debts.find(
                            (debt) => debt.creditor.userId === creditor.userId
                        )?.amount || "N/A"}</td>
            <td className='py-2'>{!debts.find((debt) => debt.creditor.userId === creditor.userId)
                .UnderSettlement ? (
                <button
                onClick={handleSettle(
                    debts.find(
                    (debt) => debt.creditor.userId === creditor.userId
                    )?._id
                )}
                >
                Settle
                </button>
            ) : (
                <button>Waiting for Confirmation</button>
            )}</td>
        </>
    )} else { return null; }
}

export default CreditDetails